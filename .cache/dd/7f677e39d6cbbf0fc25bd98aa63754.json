{"id":"app.ts","dependencies":[{"name":"C:\\Users\\Phillipe\\Desktop\\Frontend\\TypeScript grundkurs\\AJAX API\\Jokes-App\\tsconfig.json","includedInParent":true,"mtime":1674121425834},{"name":"C:\\Users\\Phillipe\\Desktop\\Frontend\\TypeScript grundkurs\\AJAX API\\Jokes-App\\package.json","includedInParent":true,"mtime":1674564739365}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar url = \"https://v2.jokeapi.dev/joke/Any\";\nvar checkboxes = document.querySelectorAll('.blacklist');\nvar categories = document.querySelector('#categories');\nvar theJoke = document.querySelector('#the-joke');\nvar explainJoke = document.querySelector('#explain-joke');\nvar valueStrings = [\"\", \"nsfw\", \"religious\", \"political\", \"racist\", \"sexist\", \"explicit\"];\nvar radioStrings = [\"Any\", \"Misc\", \"Programming\", \"Dark\", \"Spooky\"];\nvar checkedBlacklist = [];\nfunction filterBlacklist() {\n  checkboxes.forEach(function (checkbox, index) {\n    checkbox.addEventListener(\"change\", function (e) {\n      if (checkbox.checked) {\n        if (!checkedBlacklist.includes(valueStrings[index])) {\n          checkedBlacklist.unshift(valueStrings[index]);\n        }\n      } else {\n        checkedBlacklist = checkedBlacklist.filter(function (blacklisted) {\n          return blacklisted !== valueStrings[index];\n        });\n        url = \"https://v2.jokeapi.dev/joke/Any\";\n      }\n      var addBlacklistString = checkedBlacklist.join(\",\");\n      url += \"?blacklistFlags=\" + addBlacklistString;\n      getJoke(url);\n    });\n  });\n}\nfunction radioSelect() {\n  categories.innerHTML = radioStrings.map(function (radio) {\n    return \"<div>\\n        <input type=\\\"radio\\\" name=\\\"radio-value\\\" value=\\\"\".concat(radio, \"\\\" id=\\\"\").concat(radio, \"\\\">\\n        <label for=\\\"\").concat(radio, \"\\\">\").concat(radio, \"</label>\\n    </div>\");\n  }).join(' ');\n  var radioButtons = document.querySelectorAll('input[name=\"radio-value\"]');\n  var _iterator = _createForOfIteratorHelper(radioButtons),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var radioButton = _step.value;\n      radioButton.addEventListener(\"change\", showSelected);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  function showSelected(e) {\n    var target = e.target;\n    if (target.checked) {\n      url = \"https://v2.jokeapi.dev/joke/\".concat(target.value);\n      getJoke(url);\n    }\n  }\n  radioButtons[0].checked = true;\n}\nfunction checkTheBoxes() {\n  checkboxes.forEach(function (box) {\n    box.checked = true;\n  });\n}\ncheckTheBoxes();\nfunction getJoke(joke) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response, data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(joke);\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return response.json();\n        case 5:\n          data = _context.sent;\n          if (data.type === \"twopart\") {\n            theJoke.innerHTML = \"\";\n            explainJoke.innerHTML = \"\";\n            theJoke.append(data.setup);\n            explainJoke.append(data.delivery);\n          }\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n}\nfilterBlacklist();\nradioSelect();"},"sourceMaps":{"js":{"mappings":[{"source":"app.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":35,"column":0}},{"source":"app.ts","name":null,"original":{"line":1,"column":4},"generated":{"line":35,"column":4}},{"source":"app.ts","name":null,"original":{"line":1,"column":7},"generated":{"line":35,"column":7}},{"source":"app.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":35,"column":10}},{"source":"app.ts","name":null,"original":{"line":1,"column":51},"generated":{"line":35,"column":43}},{"source":"app.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":36,"column":0}},{"source":"app.ts","name":null,"original":{"line":2,"column":6},"generated":{"line":36,"column":4}},{"source":"app.ts","name":null,"original":{"line":2,"column":16},"generated":{"line":36,"column":14}},{"source":"app.ts","name":null,"original":{"line":2,"column":19},"generated":{"line":36,"column":17}},{"source":"app.ts","name":null,"original":{"line":2,"column":27},"generated":{"line":36,"column":25}},{"source":"app.ts","name":null,"original":{"line":2,"column":28},"generated":{"line":36,"column":26}},{"source":"app.ts","name":null,"original":{"line":2,"column":44},"generated":{"line":36,"column":42}},{"source":"app.ts","name":null,"original":{"line":2,"column":45},"generated":{"line":36,"column":43}},{"source":"app.ts","name":null,"original":{"line":2,"column":57},"generated":{"line":36,"column":55}},{"source":"app.ts","name":null,"original":{"line":2,"column":90},"generated":{"line":36,"column":56}},{"source":"app.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":37,"column":0}},{"source":"app.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":37,"column":4}},{"source":"app.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":37,"column":14}},{"source":"app.ts","name":null,"original":{"line":3,"column":19},"generated":{"line":37,"column":17}},{"source":"app.ts","name":null,"original":{"line":3,"column":27},"generated":{"line":37,"column":25}},{"source":"app.ts","name":null,"original":{"line":3,"column":28},"generated":{"line":37,"column":26}},{"source":"app.ts","name":null,"original":{"line":3,"column":41},"generated":{"line":37,"column":39}},{"source":"app.ts","name":null,"original":{"line":3,"column":42},"generated":{"line":37,"column":40}},{"source":"app.ts","name":null,"original":{"line":3,"column":55},"generated":{"line":37,"column":53}},{"source":"app.ts","name":null,"original":{"line":3,"column":74},"generated":{"line":37,"column":54}},{"source":"app.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":38,"column":0}},{"source":"app.ts","name":null,"original":{"line":4,"column":6},"generated":{"line":38,"column":4}},{"source":"app.ts","name":null,"original":{"line":4,"column":13},"generated":{"line":38,"column":11}},{"source":"app.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":38,"column":14}},{"source":"app.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":38,"column":22}},{"source":"app.ts","name":null,"original":{"line":4,"column":25},"generated":{"line":38,"column":23}},{"source":"app.ts","name":null,"original":{"line":4,"column":38},"generated":{"line":38,"column":36}},{"source":"app.ts","name":null,"original":{"line":4,"column":39},"generated":{"line":38,"column":37}},{"source":"app.ts","name":null,"original":{"line":4,"column":50},"generated":{"line":38,"column":48}},{"source":"app.ts","name":null,"original":{"line":4,"column":75},"generated":{"line":38,"column":49}},{"source":"app.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":39,"column":0}},{"source":"app.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":39,"column":4}},{"source":"app.ts","name":null,"original":{"line":5,"column":17},"generated":{"line":39,"column":15}},{"source":"app.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":39,"column":18}},{"source":"app.ts","name":null,"original":{"line":5,"column":28},"generated":{"line":39,"column":26}},{"source":"app.ts","name":null,"original":{"line":5,"column":29},"generated":{"line":39,"column":27}},{"source":"app.ts","name":null,"original":{"line":5,"column":42},"generated":{"line":39,"column":40}},{"source":"app.ts","name":null,"original":{"line":5,"column":43},"generated":{"line":39,"column":41}},{"source":"app.ts","name":null,"original":{"line":5,"column":58},"generated":{"line":39,"column":56}},{"source":"app.ts","name":null,"original":{"line":5,"column":83},"generated":{"line":39,"column":57}},{"source":"app.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":40,"column":0}},{"source":"app.ts","name":null,"original":{"line":7,"column":6},"generated":{"line":40,"column":4}},{"source":"app.ts","name":null,"original":{"line":7,"column":18},"generated":{"line":40,"column":16}},{"source":"app.ts","name":null,"original":{"line":7,"column":31},"generated":{"line":40,"column":19}},{"source":"app.ts","name":null,"original":{"line":7,"column":32},"generated":{"line":40,"column":20}},{"source":"app.ts","name":null,"original":{"line":7,"column":34},"generated":{"line":40,"column":22}},{"source":"app.ts","name":null,"original":{"line":7,"column":36},"generated":{"line":40,"column":24}},{"source":"app.ts","name":null,"original":{"line":7,"column":42},"generated":{"line":40,"column":30}},{"source":"app.ts","name":null,"original":{"line":7,"column":44},"generated":{"line":40,"column":32}},{"source":"app.ts","name":null,"original":{"line":7,"column":55},"generated":{"line":40,"column":43}},{"source":"app.ts","name":null,"original":{"line":7,"column":57},"generated":{"line":40,"column":45}},{"source":"app.ts","name":null,"original":{"line":7,"column":68},"generated":{"line":40,"column":56}},{"source":"app.ts","name":null,"original":{"line":7,"column":70},"generated":{"line":40,"column":58}},{"source":"app.ts","name":null,"original":{"line":7,"column":78},"generated":{"line":40,"column":66}},{"source":"app.ts","name":null,"original":{"line":7,"column":80},"generated":{"line":40,"column":68}},{"source":"app.ts","name":null,"original":{"line":7,"column":88},"generated":{"line":40,"column":76}},{"source":"app.ts","name":null,"original":{"line":7,"column":90},"generated":{"line":40,"column":78}},{"source":"app.ts","name":null,"original":{"line":7,"column":100},"generated":{"line":40,"column":88}},{"source":"app.ts","name":null,"original":{"line":7,"column":101},"generated":{"line":40,"column":89}},{"source":"app.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":41,"column":0}},{"source":"app.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":41,"column":4}},{"source":"app.ts","name":null,"original":{"line":8,"column":18},"generated":{"line":41,"column":16}},{"source":"app.ts","name":null,"original":{"line":8,"column":31},"generated":{"line":41,"column":19}},{"source":"app.ts","name":null,"original":{"line":8,"column":32},"generated":{"line":41,"column":20}},{"source":"app.ts","name":null,"original":{"line":8,"column":37},"generated":{"line":41,"column":25}},{"source":"app.ts","name":null,"original":{"line":8,"column":39},"generated":{"line":41,"column":27}},{"source":"app.ts","name":null,"original":{"line":8,"column":45},"generated":{"line":41,"column":33}},{"source":"app.ts","name":null,"original":{"line":8,"column":47},"generated":{"line":41,"column":35}},{"source":"app.ts","name":null,"original":{"line":8,"column":60},"generated":{"line":41,"column":48}},{"source":"app.ts","name":null,"original":{"line":8,"column":62},"generated":{"line":41,"column":50}},{"source":"app.ts","name":null,"original":{"line":8,"column":68},"generated":{"line":41,"column":56}},{"source":"app.ts","name":null,"original":{"line":8,"column":70},"generated":{"line":41,"column":58}},{"source":"app.ts","name":null,"original":{"line":8,"column":78},"generated":{"line":41,"column":66}},{"source":"app.ts","name":null,"original":{"line":8,"column":79},"generated":{"line":41,"column":67}},{"source":"app.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":42,"column":0}},{"source":"app.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":42,"column":4}},{"source":"app.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":42,"column":20}},{"source":"app.ts","name":null,"original":{"line":9,"column":33},"generated":{"line":42,"column":23}},{"source":"app.ts","name":null,"original":{"line":9,"column":35},"generated":{"line":42,"column":25}},{"source":"app.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":43,"column":0}},{"source":"app.ts","name":null,"original":{"line":11,"column":9},"generated":{"line":43,"column":9}},{"source":"app.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":43,"column":24}},{"source":"app.ts","name":null,"original":{"line":11,"column":24},"generated":{"line":43,"column":27}},{"source":"app.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":44,"column":2}},{"source":"app.ts","name":null,"original":{"line":12,"column":14},"generated":{"line":44,"column":12}},{"source":"app.ts","name":null,"original":{"line":12,"column":15},"generated":{"line":44,"column":13}},{"source":"app.ts","name":null,"original":{"line":12,"column":22},"generated":{"line":44,"column":20}},{"source":"app.ts","name":null,"original":{"line":12,"column":23},"generated":{"line":44,"column":21}},{"source":"app.ts","name":null,"original":{"line":12,"column":24},"generated":{"line":44,"column":31}},{"source":"app.ts","name":null,"original":{"line":12,"column":32},"generated":{"line":44,"column":39}},{"source":"app.ts","name":null,"original":{"line":12,"column":34},"generated":{"line":44,"column":41}},{"source":"app.ts","name":null,"original":{"line":12,"column":39},"generated":{"line":44,"column":46}},{"source":"app.ts","name":null,"original":{"line":12,"column":43},"generated":{"line":44,"column":48}},{"source":"app.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":45,"column":4}},{"source":"app.ts","name":null,"original":{"line":13,"column":16},"generated":{"line":45,"column":12}},{"source":"app.ts","name":null,"original":{"line":13,"column":17},"generated":{"line":45,"column":13}},{"source":"app.ts","name":null,"original":{"line":13,"column":33},"generated":{"line":45,"column":29}},{"source":"app.ts","name":null,"original":{"line":13,"column":34},"generated":{"line":45,"column":30}},{"source":"app.ts","name":null,"original":{"line":13,"column":42},"generated":{"line":45,"column":38}},{"source":"app.ts","name":null,"original":{"line":13,"column":44},"generated":{"line":45,"column":40}},{"source":"app.ts","name":null,"original":{"line":13,"column":44},"generated":{"line":45,"column":50}},{"source":"app.ts","name":null,"original":{"line":13,"column":45},"generated":{"line":45,"column":51}},{"source":"app.ts","name":null,"original":{"line":13,"column":48},"generated":{"line":45,"column":53}},{"source":"app.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":46,"column":6}},{"source":"app.ts","name":null,"original":{"line":14,"column":16},"generated":{"line":46,"column":10}},{"source":"app.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":46,"column":18}},{"source":"app.ts","name":null,"original":{"line":14,"column":25},"generated":{"line":46,"column":19}},{"source":"app.ts","name":null,"original":{"line":14,"column":32},"generated":{"line":46,"column":26}},{"source":"app.ts","name":null,"original":{"line":14,"column":34},"generated":{"line":46,"column":28}},{"source":"app.ts","name":null,"original":{"line":15,"column":16},"generated":{"line":47,"column":8}},{"source":"app.ts","name":null,"original":{"line":15,"column":20},"generated":{"line":47,"column":12}},{"source":"app.ts","name":null,"original":{"line":15,"column":21},"generated":{"line":47,"column":13}},{"source":"app.ts","name":null,"original":{"line":15,"column":37},"generated":{"line":47,"column":29}},{"source":"app.ts","name":null,"original":{"line":15,"column":38},"generated":{"line":47,"column":30}},{"source":"app.ts","name":null,"original":{"line":15,"column":46},"generated":{"line":47,"column":38}},{"source":"app.ts","name":null,"original":{"line":15,"column":47},"generated":{"line":47,"column":39}},{"source":"app.ts","name":null,"original":{"line":15,"column":59},"generated":{"line":47,"column":51}},{"source":"app.ts","name":null,"original":{"line":15,"column":60},"generated":{"line":47,"column":52}},{"source":"app.ts","name":null,"original":{"line":15,"column":65},"generated":{"line":47,"column":57}},{"source":"app.ts","name":null,"original":{"line":15,"column":66},"generated":{"line":47,"column":58}},{"source":"app.ts","name":null,"original":{"line":15,"column":67},"generated":{"line":47,"column":59}},{"source":"app.ts","name":null,"original":{"line":15,"column":69},"generated":{"line":47,"column":61}},{"source":"app.ts","name":null,"original":{"line":16,"column":20},"generated":{"line":48,"column":10}},{"source":"app.ts","name":null,"original":{"line":16,"column":36},"generated":{"line":48,"column":26}},{"source":"app.ts","name":null,"original":{"line":16,"column":37},"generated":{"line":48,"column":27}},{"source":"app.ts","name":null,"original":{"line":16,"column":44},"generated":{"line":48,"column":34}},{"source":"app.ts","name":null,"original":{"line":16,"column":45},"generated":{"line":48,"column":35}},{"source":"app.ts","name":null,"original":{"line":16,"column":57},"generated":{"line":48,"column":47}},{"source":"app.ts","name":null,"original":{"line":16,"column":58},"generated":{"line":48,"column":48}},{"source":"app.ts","name":null,"original":{"line":16,"column":63},"generated":{"line":48,"column":53}},{"source":"app.ts","name":null,"original":{"line":16,"column":64},"generated":{"line":48,"column":54}},{"source":"app.ts","name":null,"original":{"line":16,"column":65},"generated":{"line":48,"column":55}},{"source":"app.ts","name":null,"original":{"line":18,"column":13},"generated":{"line":50,"column":7}},{"source":"app.ts","name":null,"original":{"line":18,"column":19},"generated":{"line":50,"column":13}},{"source":"app.ts","name":null,"original":{"line":19,"column":16},"generated":{"line":51,"column":8}},{"source":"app.ts","name":null,"original":{"line":19,"column":32},"generated":{"line":51,"column":24}},{"source":"app.ts","name":null,"original":{"line":19,"column":35},"generated":{"line":51,"column":27}},{"source":"app.ts","name":null,"original":{"line":19,"column":51},"generated":{"line":51,"column":43}},{"source":"app.ts","name":null,"original":{"line":19,"column":52},"generated":{"line":51,"column":44}},{"source":"app.ts","name":null,"original":{"line":19,"column":58},"generated":{"line":51,"column":50}},{"source":"app.ts","name":null,"original":{"line":19,"column":59},"generated":{"line":51,"column":51}},{"source":"app.ts","name":null,"original":{"line":19,"column":59},"generated":{"line":51,"column":61}},{"source":"app.ts","name":null,"original":{"line":19,"column":70},"generated":{"line":51,"column":72}},{"source":"app.ts","name":null,"original":{"line":19,"column":70},"generated":{"line":52,"column":10}},{"source":"app.ts","name":null,"original":{"line":19,"column":74},"generated":{"line":52,"column":17}},{"source":"app.ts","name":null,"original":{"line":19,"column":85},"generated":{"line":52,"column":28}},{"source":"app.ts","name":null,"original":{"line":19,"column":90},"generated":{"line":52,"column":33}},{"source":"app.ts","name":null,"original":{"line":19,"column":102},"generated":{"line":52,"column":45}},{"source":"app.ts","name":null,"original":{"line":19,"column":103},"generated":{"line":52,"column":46}},{"source":"app.ts","name":null,"original":{"line":19,"column":108},"generated":{"line":52,"column":51}},{"source":"app.ts","name":null,"original":{"line":19,"column":109},"generated":{"line":52,"column":52}},{"source":"app.ts","name":null,"original":{"line":19,"column":109},"generated":{"line":53,"column":8}},{"source":"app.ts","name":null,"original":{"line":19,"column":110},"generated":{"line":53,"column":10}},{"source":"app.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":54,"column":8}},{"source":"app.ts","name":null,"original":{"line":20,"column":19},"generated":{"line":54,"column":11}},{"source":"app.ts","name":null,"original":{"line":20,"column":22},"generated":{"line":54,"column":14}},{"source":"app.ts","name":null,"original":{"line":20,"column":55},"generated":{"line":54,"column":47}},{"source":"app.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":56,"column":6}},{"source":"app.ts","name":null,"original":{"line":22,"column":16},"generated":{"line":56,"column":10}},{"source":"app.ts","name":null,"original":{"line":22,"column":34},"generated":{"line":56,"column":28}},{"source":"app.ts","name":null,"original":{"line":22,"column":37},"generated":{"line":56,"column":31}},{"source":"app.ts","name":null,"original":{"line":22,"column":53},"generated":{"line":56,"column":47}},{"source":"app.ts","name":null,"original":{"line":22,"column":54},"generated":{"line":56,"column":48}},{"source":"app.ts","name":null,"original":{"line":22,"column":58},"generated":{"line":56,"column":52}},{"source":"app.ts","name":null,"original":{"line":22,"column":59},"generated":{"line":56,"column":53}},{"source":"app.ts","name":null,"original":{"line":22,"column":62},"generated":{"line":56,"column":56}},{"source":"app.ts","name":null,"original":{"line":22,"column":63},"generated":{"line":56,"column":57}},{"source":"app.ts","name":null,"original":{"line":23,"column":12},"generated":{"line":57,"column":6}},{"source":"app.ts","name":null,"original":{"line":23,"column":15},"generated":{"line":57,"column":9}},{"source":"app.ts","name":null,"original":{"line":23,"column":19},"generated":{"line":57,"column":13}},{"source":"app.ts","name":null,"original":{"line":23,"column":37},"generated":{"line":57,"column":31}},{"source":"app.ts","name":null,"original":{"line":23,"column":40},"generated":{"line":57,"column":34}},{"source":"app.ts","name":null,"original":{"line":23,"column":58},"generated":{"line":57,"column":52}},{"source":"app.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":58,"column":6}},{"source":"app.ts","name":null,"original":{"line":25,"column":19},"generated":{"line":58,"column":13}},{"source":"app.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":58,"column":14}},{"source":"app.ts","name":null,"original":{"line":25,"column":23},"generated":{"line":58,"column":17}},{"source":"app.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":58,"column":18}},{"source":"app.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":59,"column":4}},{"source":"app.ts","name":null,"original":{"line":26,"column":9},"generated":{"line":59,"column":5}},{"source":"app.ts","name":null,"original":{"line":26,"column":10},"generated":{"line":59,"column":6}},{"source":"app.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":60,"column":2}},{"source":"app.ts","name":null,"original":{"line":27,"column":5},"generated":{"line":60,"column":3}},{"source":"app.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":60,"column":4}},{"source":"app.ts","name":null,"original":{"line":28,"column":0},"generated":{"line":61,"column":0}},{"source":"app.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":62,"column":0}},{"source":"app.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":62,"column":9}},{"source":"app.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":62,"column":20}},{"source":"app.ts","name":null,"original":{"line":30,"column":20},"generated":{"line":62,"column":23}},{"source":"app.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":63,"column":2}},{"source":"app.ts","name":null,"original":{"line":31,"column":14},"generated":{"line":63,"column":12}},{"source":"app.ts","name":null,"original":{"line":31,"column":15},"generated":{"line":63,"column":13}},{"source":"app.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":63,"column":22}},{"source":"app.ts","name":null,"original":{"line":31,"column":27},"generated":{"line":63,"column":25}},{"source":"app.ts","name":null,"original":{"line":31,"column":39},"generated":{"line":63,"column":37}},{"source":"app.ts","name":null,"original":{"line":31,"column":40},"generated":{"line":63,"column":38}},{"source":"app.ts","name":null,"original":{"line":31,"column":43},"generated":{"line":63,"column":41}},{"source":"app.ts","name":null,"original":{"line":31,"column":44},"generated":{"line":63,"column":42}},{"source":"app.ts","name":null,"original":{"line":31,"column":45},"generated":{"line":63,"column":52}},{"source":"app.ts","name":null,"original":{"line":31,"column":50},"generated":{"line":63,"column":57}},{"source":"app.ts","name":null,"original":{"line":31,"column":50},"generated":{"line":64,"column":4}},{"source":"app.ts","name":null,"original":{"line":33,"column":56},"generated":{"line":64,"column":87}},{"source":"app.ts","name":null,"original":{"line":33,"column":61},"generated":{"line":64,"column":92}},{"source":"app.ts","name":null,"original":{"line":33,"column":70},"generated":{"line":64,"column":113}},{"source":"app.ts","name":null,"original":{"line":33,"column":75},"generated":{"line":64,"column":118}},{"source":"app.ts","name":null,"original":{"line":34,"column":22},"generated":{"line":64,"column":157}},{"source":"app.ts","name":null,"original":{"line":34,"column":27},"generated":{"line":64,"column":162}},{"source":"app.ts","name":null,"original":{"line":34,"column":32},"generated":{"line":64,"column":178}},{"source":"app.ts","name":null,"original":{"line":34,"column":37},"generated":{"line":64,"column":183}},{"source":"app.ts","name":null,"original":{"line":34,"column":37},"generated":{"line":65,"column":2}},{"source":"app.ts","name":null,"original":{"line":35,"column":11},"generated":{"line":65,"column":3}},{"source":"app.ts","name":null,"original":{"line":36,"column":5},"generated":{"line":65,"column":4}},{"source":"app.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":65,"column":5}},{"source":"app.ts","name":null,"original":{"line":36,"column":10},"generated":{"line":65,"column":9}},{"source":"app.ts","name":null,"original":{"line":36,"column":11},"generated":{"line":65,"column":10}},{"source":"app.ts","name":null,"original":{"line":36,"column":14},"generated":{"line":65,"column":13}},{"source":"app.ts","name":null,"original":{"line":36,"column":15},"generated":{"line":65,"column":14}},{"source":"app.ts","name":null,"original":{"line":38,"column":4},"generated":{"line":66,"column":2}},{"source":"app.ts","name":null,"original":{"line":38,"column":10},"generated":{"line":66,"column":6}},{"source":"app.ts","name":null,"original":{"line":38,"column":22},"generated":{"line":66,"column":18}},{"source":"app.ts","name":null,"original":{"line":38,"column":25},"generated":{"line":66,"column":21}},{"source":"app.ts","name":null,"original":{"line":38,"column":33},"generated":{"line":66,"column":29}},{"source":"app.ts","name":null,"original":{"line":38,"column":34},"generated":{"line":66,"column":30}},{"source":"app.ts","name":null,"original":{"line":38,"column":50},"generated":{"line":66,"column":46}},{"source":"app.ts","name":null,"original":{"line":38,"column":51},"generated":{"line":66,"column":47}},{"source":"app.ts","name":null,"original":{"line":38,"column":78},"generated":{"line":66,"column":74}},{"source":"app.ts","name":null,"original":{"line":38,"column":111},"generated":{"line":66,"column":75}},{"source":"app.ts","name":null,"original":{"line":38,"column":111},"generated":{"line":67,"column":2}},{"source":"app.ts","name":null,"original":{"line":39,"column":30},"generated":{"line":67,"column":45}},{"source":"app.ts","name":null,"original":{"line":39,"column":42},"generated":{"line":67,"column":57}},{"source":"app.ts","name":null,"original":{"line":39,"column":42},"generated":{"line":68,"column":4}},{"source":"app.ts","name":null,"original":{"line":39,"column":42},"generated":{"line":69,"column":2}},{"source":"app.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":70,"column":4}},{"source":"app.ts","name":null,"original":{"line":39,"column":44},"generated":{"line":70,"column":56}},{"source":"app.ts","name":null,"original":{"line":39,"column":44},"generated":{"line":71,"column":6}},{"source":"app.ts","name":null,"original":{"line":39,"column":15},"generated":{"line":71,"column":10}},{"source":"app.ts","name":null,"original":{"line":39,"column":26},"generated":{"line":71,"column":21}},{"source":"app.ts","name":null,"original":{"line":40,"column":8},"generated":{"line":72,"column":6}},{"source":"app.ts","name":null,"original":{"line":40,"column":19},"generated":{"line":72,"column":17}},{"source":"app.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":72,"column":18}},{"source":"app.ts","name":null,"original":{"line":40,"column":36},"generated":{"line":72,"column":34}},{"source":"app.ts","name":null,"original":{"line":40,"column":37},"generated":{"line":72,"column":35}},{"source":"app.ts","name":null,"original":{"line":40,"column":45},"generated":{"line":72,"column":43}},{"source":"app.ts","name":null,"original":{"line":40,"column":47},"generated":{"line":72,"column":45}},{"source":"app.ts","name":null,"original":{"line":40,"column":59},"generated":{"line":72,"column":57}},{"source":"app.ts","name":null,"original":{"line":40,"column":60},"generated":{"line":72,"column":58}},{"source":"app.ts","name":null,"original":{"line":41,"column":5},"generated":{"line":74,"column":2}},{"source":"app.ts","name":null,"original":{"line":41,"column":5},"generated":{"line":75,"column":4}},{"source":"app.ts","name":null,"original":{"line":41,"column":5},"generated":{"line":76,"column":2}},{"source":"app.ts","name":null,"original":{"line":41,"column":5},"generated":{"line":77,"column":4}},{"source":"app.ts","name":null,"original":{"line":41,"column":5},"generated":{"line":78,"column":2}},{"source":"app.ts","name":null,"original":{"line":43,"column":4},"generated":{"line":79,"column":2}},{"source":"app.ts","name":null,"original":{"line":43,"column":13},"generated":{"line":79,"column":11}},{"source":"app.ts","name":null,"original":{"line":43,"column":25},"generated":{"line":79,"column":23}},{"source":"app.ts","name":null,"original":{"line":43,"column":26},"generated":{"line":79,"column":24}},{"source":"app.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":79,"column":25}},{"source":"app.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":79,"column":27}},{"source":"app.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":80,"column":4}},{"source":"app.ts","name":null,"original":{"line":44,"column":14},"generated":{"line":80,"column":8}},{"source":"app.ts","name":null,"original":{"line":44,"column":20},"generated":{"line":80,"column":14}},{"source":"app.ts","name":null,"original":{"line":44,"column":23},"generated":{"line":80,"column":17}},{"source":"app.ts","name":null,"original":{"line":44,"column":24},"generated":{"line":80,"column":18}},{"source":"app.ts","name":null,"original":{"line":44,"column":25},"generated":{"line":80,"column":19}},{"source":"app.ts","name":null,"original":{"line":44,"column":51},"generated":{"line":80,"column":25}},{"source":"app.ts","name":null,"original":{"line":45,"column":8},"generated":{"line":81,"column":4}},{"source":"app.ts","name":null,"original":{"line":45,"column":12},"generated":{"line":81,"column":8}},{"source":"app.ts","name":null,"original":{"line":45,"column":18},"generated":{"line":81,"column":14}},{"source":"app.ts","name":null,"original":{"line":45,"column":19},"generated":{"line":81,"column":15}},{"source":"app.ts","name":null,"original":{"line":45,"column":26},"generated":{"line":81,"column":22}},{"source":"app.ts","name":null,"original":{"line":45,"column":28},"generated":{"line":81,"column":24}},{"source":"app.ts","name":null,"original":{"line":46,"column":12},"generated":{"line":82,"column":6}},{"source":"app.ts","name":null,"original":{"line":46,"column":15},"generated":{"line":82,"column":9}},{"source":"app.ts","name":null,"original":{"line":46,"column":49},"generated":{"line":82,"column":50}},{"source":"app.ts","name":null,"original":{"line":46,"column":55},"generated":{"line":82,"column":56}},{"source":"app.ts","name":null,"original":{"line":46,"column":56},"generated":{"line":82,"column":57}},{"source":"app.ts","name":null,"original":{"line":46,"column":61},"generated":{"line":82,"column":62}},{"source":"app.ts","name":null,"original":{"line":46,"column":63},"generated":{"line":82,"column":63}},{"source":"app.ts","name":null,"original":{"line":47,"column":12},"generated":{"line":83,"column":6}},{"source":"app.ts","name":null,"original":{"line":47,"column":19},"generated":{"line":83,"column":13}},{"source":"app.ts","name":null,"original":{"line":47,"column":20},"generated":{"line":83,"column":14}},{"source":"app.ts","name":null,"original":{"line":47,"column":23},"generated":{"line":83,"column":17}},{"source":"app.ts","name":null,"original":{"line":47,"column":24},"generated":{"line":83,"column":18}},{"source":"app.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":85,"column":2}},{"source":"app.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":86,"column":2}},{"source":"app.ts","name":null,"original":{"line":50,"column":16},"generated":{"line":86,"column":14}},{"source":"app.ts","name":null,"original":{"line":50,"column":17},"generated":{"line":86,"column":15}},{"source":"app.ts","name":null,"original":{"line":50,"column":18},"generated":{"line":86,"column":16}},{"source":"app.ts","name":null,"original":{"line":50,"column":19},"generated":{"line":86,"column":17}},{"source":"app.ts","name":null,"original":{"line":50,"column":20},"generated":{"line":86,"column":18}},{"source":"app.ts","name":null,"original":{"line":50,"column":27},"generated":{"line":86,"column":25}},{"source":"app.ts","name":null,"original":{"line":50,"column":30},"generated":{"line":86,"column":28}},{"source":"app.ts","name":null,"original":{"line":50,"column":34},"generated":{"line":86,"column":32}},{"source":"app.ts","name":null,"original":{"line":51,"column":0},"generated":{"line":87,"column":0}},{"source":"app.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":88,"column":0}},{"source":"app.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":88,"column":9}},{"source":"app.ts","name":null,"original":{"line":54,"column":22},"generated":{"line":88,"column":22}},{"source":"app.ts","name":null,"original":{"line":54,"column":22},"generated":{"line":88,"column":25}},{"source":"app.ts","name":null,"original":{"line":55,"column":4},"generated":{"line":89,"column":2}},{"source":"app.ts","name":null,"original":{"line":55,"column":14},"generated":{"line":89,"column":12}},{"source":"app.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":89,"column":13}},{"source":"app.ts","name":null,"original":{"line":55,"column":22},"generated":{"line":89,"column":20}},{"source":"app.ts","name":null,"original":{"line":55,"column":23},"generated":{"line":89,"column":21}},{"source":"app.ts","name":null,"original":{"line":55,"column":23},"generated":{"line":89,"column":31}},{"source":"app.ts","name":null,"original":{"line":55,"column":26},"generated":{"line":89,"column":34}},{"source":"app.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":89,"column":36}},{"source":"app.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":90,"column":4}},{"source":"app.ts","name":null,"original":{"line":56,"column":11},"generated":{"line":90,"column":7}},{"source":"app.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":90,"column":8}},{"source":"app.ts","name":null,"original":{"line":56,"column":19},"generated":{"line":90,"column":15}},{"source":"app.ts","name":null,"original":{"line":56,"column":22},"generated":{"line":90,"column":18}},{"source":"app.ts","name":null,"original":{"line":56,"column":26},"generated":{"line":90,"column":22}},{"source":"app.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":91,"column":2}},{"source":"app.ts","name":null,"original":{"line":57,"column":5},"generated":{"line":91,"column":3}},{"source":"app.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":91,"column":4}},{"source":"app.ts","name":null,"original":{"line":58,"column":0},"generated":{"line":92,"column":0}},{"source":"app.ts","name":null,"original":{"line":59,"column":0},"generated":{"line":93,"column":0}},{"source":"app.ts","name":null,"original":{"line":59,"column":13},"generated":{"line":93,"column":13}},{"source":"app.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":93,"column":15}},{"source":"app.ts","name":null,"original":{"line":61,"column":0},"generated":{"line":94,"column":0}},{"source":"app.ts","name":null,"original":{"line":61,"column":15},"generated":{"line":94,"column":9}},{"source":"app.ts","name":null,"original":{"line":61,"column":22},"generated":{"line":94,"column":16}},{"source":"app.ts","name":null,"original":{"line":61,"column":23},"generated":{"line":94,"column":17}},{"source":"app.ts","name":null,"original":{"line":61,"column":35},"generated":{"line":94,"column":21}},{"source":"app.ts","name":null,"original":{"line":61,"column":35},"generated":{"line":94,"column":23}},{"source":"app.ts","name":null,"original":{"line":62,"column":21},"generated":{"line":101,"column":10}},{"source":"app.ts","name":null,"original":{"line":62,"column":27},"generated":{"line":101,"column":17}},{"source":"app.ts","name":null,"original":{"line":62,"column":32},"generated":{"line":101,"column":22}},{"source":"app.ts","name":null,"original":{"line":62,"column":33},"generated":{"line":101,"column":23}},{"source":"app.ts","name":null,"original":{"line":62,"column":37},"generated":{"line":101,"column":27}},{"source":"app.ts","name":null,"original":{"line":62,"column":38},"generated":{"line":101,"column":28}},{"source":"app.ts","name":null,"original":{"line":62,"column":38},"generated":{"line":102,"column":8}},{"source":"app.ts","name":null,"original":{"line":62,"column":10},"generated":{"line":103,"column":10}},{"source":"app.ts","name":null,"original":{"line":62,"column":18},"generated":{"line":103,"column":18}},{"source":"app.ts","name":null,"original":{"line":62,"column":18},"generated":{"line":104,"column":10}},{"source":"app.ts","name":null,"original":{"line":63,"column":17},"generated":{"line":105,"column":10}},{"source":"app.ts","name":null,"original":{"line":63,"column":23},"generated":{"line":105,"column":17}},{"source":"app.ts","name":null,"original":{"line":63,"column":31},"generated":{"line":105,"column":25}},{"source":"app.ts","name":null,"original":{"line":63,"column":32},"generated":{"line":105,"column":26}},{"source":"app.ts","name":null,"original":{"line":63,"column":36},"generated":{"line":105,"column":30}},{"source":"app.ts","name":null,"original":{"line":63,"column":38},"generated":{"line":105,"column":32}},{"source":"app.ts","name":null,"original":{"line":63,"column":38},"generated":{"line":106,"column":8}},{"source":"app.ts","name":null,"original":{"line":63,"column":10},"generated":{"line":107,"column":10}},{"source":"app.ts","name":null,"original":{"line":63,"column":14},"generated":{"line":107,"column":14}},{"source":"app.ts","name":null,"original":{"line":65,"column":4},"generated":{"line":108,"column":10}},{"source":"app.ts","name":null,"original":{"line":65,"column":8},"generated":{"line":108,"column":14}},{"source":"app.ts","name":null,"original":{"line":65,"column":12},"generated":{"line":108,"column":18}},{"source":"app.ts","name":null,"original":{"line":65,"column":13},"generated":{"line":108,"column":19}},{"source":"app.ts","name":null,"original":{"line":65,"column":17},"generated":{"line":108,"column":23}},{"source":"app.ts","name":null,"original":{"line":65,"column":22},"generated":{"line":108,"column":28}},{"source":"app.ts","name":null,"original":{"line":65,"column":31},"generated":{"line":108,"column":37}},{"source":"app.ts","name":null,"original":{"line":65,"column":33},"generated":{"line":108,"column":39}},{"source":"app.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":109,"column":12}},{"source":"app.ts","name":null,"original":{"line":66,"column":15},"generated":{"line":109,"column":19}},{"source":"app.ts","name":null,"original":{"line":66,"column":16},"generated":{"line":109,"column":20}},{"source":"app.ts","name":null,"original":{"line":66,"column":25},"generated":{"line":109,"column":29}},{"source":"app.ts","name":null,"original":{"line":66,"column":28},"generated":{"line":109,"column":32}},{"source":"app.ts","name":null,"original":{"line":66,"column":30},"generated":{"line":109,"column":34}},{"source":"app.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":110,"column":12}},{"source":"app.ts","name":null,"original":{"line":67,"column":19},"generated":{"line":110,"column":23}},{"source":"app.ts","name":null,"original":{"line":67,"column":20},"generated":{"line":110,"column":24}},{"source":"app.ts","name":null,"original":{"line":67,"column":29},"generated":{"line":110,"column":33}},{"source":"app.ts","name":null,"original":{"line":67,"column":32},"generated":{"line":110,"column":36}},{"source":"app.ts","name":null,"original":{"line":67,"column":34},"generated":{"line":110,"column":38}},{"source":"app.ts","name":null,"original":{"line":68,"column":8},"generated":{"line":111,"column":12}},{"source":"app.ts","name":null,"original":{"line":68,"column":15},"generated":{"line":111,"column":19}},{"source":"app.ts","name":null,"original":{"line":68,"column":16},"generated":{"line":111,"column":20}},{"source":"app.ts","name":null,"original":{"line":68,"column":22},"generated":{"line":111,"column":26}},{"source":"app.ts","name":null,"original":{"line":68,"column":23},"generated":{"line":111,"column":27}},{"source":"app.ts","name":null,"original":{"line":68,"column":27},"generated":{"line":111,"column":31}},{"source":"app.ts","name":null,"original":{"line":68,"column":28},"generated":{"line":111,"column":32}},{"source":"app.ts","name":null,"original":{"line":68,"column":33},"generated":{"line":111,"column":37}},{"source":"app.ts","name":null,"original":{"line":68,"column":34},"generated":{"line":111,"column":38}},{"source":"app.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":112,"column":12}},{"source":"app.ts","name":null,"original":{"line":69,"column":19},"generated":{"line":112,"column":23}},{"source":"app.ts","name":null,"original":{"line":69,"column":20},"generated":{"line":112,"column":24}},{"source":"app.ts","name":null,"original":{"line":69,"column":26},"generated":{"line":112,"column":30}},{"source":"app.ts","name":null,"original":{"line":69,"column":27},"generated":{"line":112,"column":31}},{"source":"app.ts","name":null,"original":{"line":69,"column":31},"generated":{"line":112,"column":35}},{"source":"app.ts","name":null,"original":{"line":69,"column":32},"generated":{"line":112,"column":36}},{"source":"app.ts","name":null,"original":{"line":69,"column":40},"generated":{"line":112,"column":44}},{"source":"app.ts","name":null,"original":{"line":69,"column":41},"generated":{"line":112,"column":45}},{"source":"app.ts","name":null,"original":{"line":70,"column":5},"generated":{"line":114,"column":8}},{"source":"app.ts","name":null,"original":{"line":70,"column":5},"generated":{"line":115,"column":8}},{"source":"app.ts","name":null,"original":{"line":70,"column":5},"generated":{"line":116,"column":10}},{"source":"app.ts","name":null,"original":{"line":70,"column":5},"generated":{"line":117,"column":6}},{"source":"app.ts","name":null,"original":{"line":70,"column":5},"generated":{"line":118,"column":4}},{"source":"app.ts","name":null,"original":{"line":70,"column":5},"generated":{"line":119,"column":2}},{"source":"app.ts","name":null,"original":{"line":71,"column":1},"generated":{"line":119,"column":3}},{"source":"app.ts","name":null,"original":{"line":71,"column":1},"generated":{"line":119,"column":5}},{"source":"app.ts","name":null,"original":{"line":73,"column":0},"generated":{"line":121,"column":0}},{"source":"app.ts","name":null,"original":{"line":73,"column":15},"generated":{"line":121,"column":15}},{"source":"app.ts","name":null,"original":{"line":73,"column":17},"generated":{"line":121,"column":17}},{"source":"app.ts","name":null,"original":{"line":74,"column":0},"generated":{"line":122,"column":0}},{"source":"app.ts","name":null,"original":{"line":74,"column":11},"generated":{"line":122,"column":11}},{"source":"app.ts","name":null,"original":{"line":74,"column":13},"generated":{"line":122,"column":13}}],"sources":{"app.ts":"let url: string = \"https://v2.jokeapi.dev/joke/Any\"\r\nconst checkboxes = document.querySelectorAll('.blacklist') as NodeListOf<HTMLInputElement>;\r\nconst categories = document.querySelector('#categories') as HTMLDivElement\r\nconst theJoke = document.querySelector('#the-joke') as HTMLParagraphElement\r\nconst explainJoke = document.querySelector('#explain-joke') as HTMLParagraphElement\r\n\r\nconst valueStrings: string[] = [\"\", \"nsfw\", \"religious\", \"political\", \"racist\", \"sexist\", \"explicit\"]\r\nconst radioStrings: string[] = [\"Any\", \"Misc\", \"Programming\", \"Dark\", \"Spooky\"]\r\nlet checkedBlacklist: string[] = []\r\n\r\nfunction filterBlacklist() {\r\n    checkboxes.forEach((checkbox, index) => {\r\n        checkbox.addEventListener(\"change\", e => {\r\n            if (checkbox.checked) {\r\n                if (!checkedBlacklist.includes(valueStrings[index])) {\r\n                    checkedBlacklist.unshift(valueStrings[index]);\r\n                }\r\n            } else {\r\n                checkedBlacklist = checkedBlacklist.filter(blacklisted => blacklisted !== valueStrings[index])\r\n                url = \"https://v2.jokeapi.dev/joke/Any\"\r\n            }\r\n            let addBlacklistString = checkedBlacklist.join(\",\")\r\n            url += \"?blacklistFlags=\" + addBlacklistString\r\n    \r\n            getJoke(url)\r\n        })\r\n    })\r\n}\r\n\r\nfunction radioSelect() {\r\n    categories.innerHTML = radioStrings.map((radio) => \r\n    `<div>\r\n        <input type=\"radio\" name=\"radio-value\" value=\"${radio}\" id=\"${radio}\">\r\n        <label for=\"${radio}\">${radio}</label>\r\n    </div>`\r\n    ).join(' ')\r\n    \r\n    const radioButtons = document.querySelectorAll('input[name=\"radio-value\"]') as NodeListOf<HTMLInputElement>\r\n    for (const radioButton of radioButtons) {\r\n        radioButton.addEventListener(\"change\", showSelected)\r\n    }\r\n    \r\n    function showSelected(e: Event) {\r\n        const target = e.target as HTMLInputElement;\r\n        if (target.checked) {\r\n            url = `https://v2.jokeapi.dev/joke/${target.value}`     \r\n            getJoke(url)     \r\n        }    \r\n    }\r\n    radioButtons[0].checked = true\r\n}\r\n\r\n//Check all boxes when load site.\r\nfunction checkTheBoxes() {\r\n    checkboxes.forEach(box => {\r\n        box.checked = true;\r\n    })\r\n}\r\ncheckTheBoxes()\r\n\r\nasync function getJoke(joke: string) {\r\n    const response = await fetch(joke)\r\n    const data = await response.json()\r\n  \r\n    if (data.type === \"twopart\") {\r\n        theJoke.innerHTML = \"\"\r\n        explainJoke.innerHTML = \"\"\r\n        theJoke.append(data.setup)\r\n        explainJoke.append(data.delivery)\r\n    } \r\n}\r\n\r\nfilterBlacklist()\r\nradioSelect()\r\n//Phil\r\n"},"lineCount":null}},"error":null,"hash":"364efba7ae1e237ee3e9bd036bc098bf","cacheData":{"env":{}}}